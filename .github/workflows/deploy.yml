name: deploy

on:
  push:
    branches: ["dev"]

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Gradle 캐시
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 3) JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 4) Gradle 빌드 (테스트 제외)
      - name: Gradle Build Run
        run: ./gradlew build -x test

      # 5) Docker 이미지 빌드
      - name: Build Docker image
        run: docker build -t yourdockerhub/promesa:${{ github.sha }} .

      # 6) DockerHub 로그인
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 7) Docker 이미지 push
      - name: Push Docker image
        run: |
          docker tag yourdockerhub/promesa:${{ github.sha }} yourdockerhub/promesa:latest
          docker push yourdockerhub/promesa:${{ github.sha }}
          docker push yourdockerhub/promesa:latest

      # 8) AWS 자격 증명 설정
      - name: Connecting to AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 9) CodeDeploy 배포 요청
      - name: Request to CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name test-application \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name Promesa-BlueGreen-DeploymentGroup \
            --s3-location bucket=ceos-promesa,bundleType=zip,key=latest.zip
